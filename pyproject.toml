[tool.poetry]
name = "rules-mcp"
version = "0.1.0"
description = "LLM Hierarchical Rule Management MCP Server"
authors = ["Your Name <your.email@example.com>"]
license = "Apache-2.0"
readme = "README.md"
packages = [{include = "rule_manager", from = "src"}]

[tool.poetry.dependencies]
python = "^3.11"
fastmcp = "^2.8.0"
pydantic = "^2.0.0"
pydantic-settings = "^2.0.0"
pyyaml = "^6.0"
portalocker = "^2.8.0"
watchdog = "^3.0.0"
structlog = "^23.0.0"
semver = "^3.0.0"
aiosqlite = "^0.19.0"
redis = {extras = ["hiredis"], version = "^5.0.0", optional = true}
prometheus-client = "^0.19.0"
slowapi = "^0.1.0"
pyjwt = "^2.8.0"
cryptography = "^41.0.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
pytest-asyncio = "^0.23.0"
pytest-cov = "^4.1.0"
black = "^23.0.0"
ruff = "^0.1.0"
mypy = "^1.7.0"
pre-commit = "^3.5.0"
bandit = "^1.7.0"
locust = "^2.17.0"
types-pyyaml = "^6.0.0"
types-redis = "^4.6.0"

[tool.poetry.extras]
redis = ["redis"]

[tool.poetry.scripts]
rule-manager = "rule_manager.main:main"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.ruff]
target-version = "py311"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.mypy]
python_version = "3.11"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
strict_optional = true

[[tool.mypy.overrides]]
module = [
    "portalocker.*",
    "slowapi.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = [
    "tests",
]
pythonpath = [
    "src",
]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/venv/*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.bandit]
exclude_dirs = ["tests", "venv"]
skips = ["B101"]  # Skip assert_used test